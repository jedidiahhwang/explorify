[{"/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/index.js":"1","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/App.js":"2","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/reportWebVitals.js":"3","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Home.js":"4","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Container.js":"5","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/routes.js":"6","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/About.js":"7","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Register.js":"8","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Login.js":"9","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/dux/store.js":"10","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/dux/userReducer.js":"11","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/dux/genreReducer.js":"12","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/dux/userListReducer.js":"13","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Genres.js":"14","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Dropdown.js":"15","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Artists.js":"16","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/ProtectedRouteLogin.js":"17","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/ProtectedRouteGenre.js":"18","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/dux/tokenReducer.js":"19"},{"size":799,"mtime":1611108586638,"results":"20","hashOfConfig":"21"},{"size":289,"mtime":1610133196783,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1609797126013,"results":"23","hashOfConfig":"21"},{"size":2508,"mtime":1610897503199,"results":"24","hashOfConfig":"21"},{"size":343,"mtime":1610561254369,"results":"25","hashOfConfig":"21"},{"size":858,"mtime":1611093785575,"results":"26","hashOfConfig":"21"},{"size":3093,"mtime":1611100702689,"results":"27","hashOfConfig":"21"},{"size":2697,"mtime":1611092086700,"results":"28","hashOfConfig":"21"},{"size":2970,"mtime":1610899942223,"results":"29","hashOfConfig":"21"},{"size":626,"mtime":1610683246645,"results":"30","hashOfConfig":"21"},{"size":1086,"mtime":1611092124372,"results":"31","hashOfConfig":"21"},{"size":857,"mtime":1610666253235,"results":"32","hashOfConfig":"21"},{"size":466,"mtime":1610386793020,"results":"33","hashOfConfig":"21"},{"size":2259,"mtime":1611114005568,"results":"34","hashOfConfig":"21"},{"size":1402,"mtime":1611094285014,"results":"35","hashOfConfig":"21"},{"size":17975,"mtime":1611094233785,"results":"36","hashOfConfig":"21"},{"size":855,"mtime":1610667542796,"results":"37","hashOfConfig":"21"},{"size":877,"mtime":1610667560582,"results":"38","hashOfConfig":"21"},{"size":1000,"mtime":1610732179348,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"g855rv",{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/index.js",[],["87","88"],"/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/App.js",["89","90","91"],"import logo from './logo.svg';\nimport './App.css';\nimport routes from \"./routes\";\n\nimport Container from \"./components/Container.js\";\nimport Home from \"./components/Home.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/reportWebVitals.js",[],"/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Home.js",["92","93","94","95"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport {withRouter} from \"react-router-dom\";\n\nconst Home = (props) => {\n    return (\n        <div className=\"home\">\n            <hgroup className=\"welcome-text\">\n                <h1 id=\"explorify-main\">Explorify</h1>\n                <h3 id=\"explorify-sub\">Discover something new</h3>\n            </hgroup>\n            <div className=\"button-holder\">\n                <Link to=\"/login\">\n                    <button className=\"home-button\">Login</button> {/* Route to the login page */}\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-login\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                        <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\n                        <path d=\"M20 12h-13l3 -3m0 6l-3 -3\" />\n                    </svg>\n                </Link>\n                <Link to=\"/register\">\n                    <button className=\"home-button\">Register</button> {/* Route to the register page */}\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-registered\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                        <circle cx=\"12\" cy=\"12\" r=\"9\" />\n                        <path d=\"M9 16v-8h4a2 2 0 0 1 0 4h-4m3 0l3 4\" />\n                    </svg>\n                </Link>\n            </div>\n            <Link to=\"/about\">\n                <a class=\"arrow-link\">See more<span class=\"arrow\"></span></a>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-question-mark\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                    <path d=\"M8 8a3.5 3 0 0 1 3.5 -3h1a3.5 3 0 0 1 3.5 3a3 3 0 0 1 -2 3a3 4 0 0 0 -2 4\" />\n                    <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"19.01\" />\n                </svg>\n            </Link>\n        </div>   \n    )\n}\n\nexport default withRouter(Home)","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Container.js",["96","97","98","99","100"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport routes from \"../routes\";\nimport {withRouter} from \"react-router-dom\";\n\nimport Home from \"./Home.js\";\n\nconst Container = (props) => {\n    \n    return (\n        <div className=\"container\">\n            {routes}\n        </div>   \n    )\n}\n\nexport default Container","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/routes.js",[],"/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/About.js",["101","102","103"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\n\nconst About = (props) => {\n    \n\n    return (\n        <div className=\"about\">\n            <h1 className=\"about-headers\">What is Explorify?</h1>\n                    <p className=\"text-block\">\n                        Explorify is a music exploration tool that is intended to\n                        expose users to different genres of music. Working similarly\n                        to other established streaming services, Explorify will highlight\n                        popular and up-and-coming artists while referencing users\n                        to similar artists.\n                    </p>\n                <br/>\n            <br/>\n            <h1 className=\"about-headers\">How does Explorify work?</h1>\n                    <p className=\"text-block\">\n                        Explorify uses a combination of JavaScript, SASS, Node (npm), and PostgreSQL as well\n                        as Spotify's public API to access data related to artists\n                        and genres. Users will create an account and select genres to explore. Spotify\n                        will then supply the information required to explore selected genres.\n                    </p>\n                <br/>\n            <br/>\n            <h1 className=\"about-headers\">Why was this project made?</h1>\n                    <p className=\"text-block\">\n                        This project was manufactured as part of the Devmountain web development\n                        curriculum, but was fueled by a desire to learn API implementation\n                        in a field of music.\n                    </p>\n            <div className=\"button-holder\">\n                <Link to=\"/\">\n                    <button className=\"about-button\">Back</button>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-arrow-left\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                        <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n                        <line x1=\"5\" y1=\"12\" x2=\"11\" y2=\"18\" />\n                        <line x1=\"5\" y1=\"12\" x2=\"11\" y2=\"6\" />\n                    </svg>\n                </Link>\n                <Link to=\"/register\">\n                    <button className=\"about-button\">Let's go!</button>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-registered\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                        <circle cx=\"12\" cy=\"12\" r=\"9\" />\n                        <path d=\"M9 16v-8h4a2 2 0 0 1 0 4h-4m3 0l3 4\" />\n                    </svg>\n                </Link>\n            </div>\n        </div>   \n    )\n}\n\nexport default About","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Register.js",["104"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {loginUser} from \"../dux/userReducer\";\nimport {setAccessToken} from \"../dux/tokenReducer\";\n\nconst Register = (props) => {\n\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const register = ((e) => {\n        e.preventDefault();\n\n        axios\n            .post(\"/auth/register\", {username, email, password})\n            .then((res) => {\n                axios\n                    .post(\"/auth/token\")\n                    .then((res) => {\n                        if(res.data) {\n                            props.setAccessToken(res.data);\n                        }\n                    })\n\n                axios\n                    .post(\"/auth/login\", {username, password})\n                    .then((res) => {\n                        props.loginUser(res.data)\n                        props.history.push(\"/genres\")\n                    })\n            })\n        axios.post(\"/auth/email\", {username, email, password});\n    })\n\n    return (\n        <div className=\"registration\">\n            <p className=\"register-headers\"> Create an account</p>\n            <form id=\"register-form\">\n                <h5 className=\"register-subheaders\"> What's your username? </h5>\n                <input\n                    className=\"input username\"\n                    placeholder=\"username\"\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <h5 className=\"register-subheaders\"> What's your gmail? </h5>\n                <input\n                    className=\"input email\"\n                    placeholder=\"email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <h5 className=\"register-subheaders\"> What's your password? </h5>\n                <input\n                    className=\"input password\"\n                    placeholder=\"password\"\n                    type=\"password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n            </form>\n            <div className=\"button-holder\">\n                <Link to=\"/\">\n                    <button className=\"register-button\">Back</button>\n                </Link>\n                    <button className=\"register-button\" onClick={register}>Register</button>\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(reduxState) {\n    return {...reduxState.user, ...reduxState.token};\n}\n\nexport default connect(mapStateToProps, {setAccessToken, loginUser})(Register)","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Login.js",[],"/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/dux/store.js",[],"/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/dux/userReducer.js",[],"/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/dux/genreReducer.js",["105"],"/* \n    Remember the 4 parts to a reducer:\n        1) Initial State\n            - Set the initial state\n        2) Action Constants\n            - Constants to manipulate\n        3) action creators\n            - Sets the object with type and payload\n        4) reducer\n            - Executes the desired functions\n*/\nimport axios from \"axios\";\n\n// Set initial state\nconst initialState = {\n    genre: \"\",\n}\n\n// Set action constants\nconst ADD_GENRE = \"ADD_GENRE\";\n\n// Set the necessary action creators\nexport function addGenre(genre) {\n    return {\n        type: ADD_GENRE,\n        payload: genre\n    }\n}\n\n// Finally, export the functions in one reducer\nexport default function reducer(state = initialState, action) {\n    switch(action.type) {\n        case ADD_GENRE:\n            return {genre: action.payload}\n        default:\n            return state\n    }\n}","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/dux/userListReducer.js",[],"/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Genres.js",["106"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../dux/userReducer\";\nimport {setAccessToken} from \"../dux/tokenReducer\";\nimport Dropdown from \"./Dropdown\";\n\nconst Genres = (props) => {\n\n    console.log(props);\n\n    const [spotifyGenres, setSpotifyGenres] = useState([]);\n    const [token, setToken] = useState(\"\");\n\n    \n\n    // This function is needed for the app to wait for the API call before rendering components\n    async function getGenres(result) {\n        await axios({\n            url: \"https://api.spotify.com/v1/recommendations/available-genre-seeds\", \n            headers: {\n                \"Authorization\" : \"Bearer \" + result,\n            },\n            method: \"GET\"\n        })\n            .then(genreResponse => {\n                setSpotifyGenres(genreResponse.data.genres);\n                setToken(result);\n            })\n            \n        }\n        \n        useEffect(() => {\n            let isMounted = true;\n            axios\n                .post(\"/auth/token\")\n                .then((res) => {\n                    if(isMounted) {\n                        getGenres(res.data);\n                        console.log(res.data);\n                        props.setAccessToken(res.data);\n                    }\n            })\n    }, [])\n\n    const logout = ((e) => {\n        e.preventDefault();\n\n        axios\n            .get(\"/auth/logout\")\n            .then(() => {\n                props.logout()\n                props.history.push(\"/\");\n                console.log(\"hello\");\n            });\n    })\n\n    return (\n        <div className=\"genres\">\n                {token && spotifyGenres.length > 0 ? \n                    <div className=\"genres-holder\">\n                        <h1 className=\"genres-headers\">Select a genre</h1>\n                        <Dropdown options={spotifyGenres} />\n                        <button className=\"logout genre-button\" onClick={logout}>Logout</button>\n                    </div>\n                 : null }\n        </div>\n    )\n}\n\nfunction mapStateToProps(reduxState) {\n    return {...reduxState.user, ...reduxState.genre, ...reduxState.token};\n}\n\nexport default connect(mapStateToProps, {logout, setAccessToken})(Genres)","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Dropdown.js",[],"/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/components/Artists.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../dux/userReducer\";\n\nconst Artists = (props) => {\n\n    const genre = props.genre[0].addedgenre;\n    \n    const [retrievedArtists, setRetrievedArtists] = useState([]);\n    const [retrievedRelatedArtists, setRetrievedRelatedArtists] = useState([]);\n    const [overlayDisplay, setOverlayDisplay] = useState(false);\n    const [artistNumber, setArtistNumber] = useState();\n    \n    useEffect(() => {\n        \n        axios\n            .post(\"/api/artist\", {\n                accessToken: props.accessToken,\n                genre: String(props.genre[0].addedgenre)\n            }) // Pass the token through a param or a query\n            .then((res) => {\n\n                const artists = res.data.artists.items.map((e) => ({\n                    images: e.images,\n                    genres: e.genres,\n                    name: e.name,\n                    href: e.href,\n                    popularity: e.popularity,\n                    followers: e.followers,\n                    external_urls: e.external_urls.spotify,\n                    id: e.id\n                }))\n                console.log(res.data);\n                setRetrievedArtists(artists);\n\n                axios\n                    .post(\"/api/relatedArtists\", {\n                        accessToken: props.accessToken,\n                        id: String(artists[0].id)\n                    })\n                    .then((res) => {\n\n                        const relatedArtists = res.data.artists.map((e) => ({\n                            images: e.images,\n                            genres: e.genres,\n                            name: e.name,\n                            href: e.href,\n                            popularity: e.popularity,\n                            followers: e.followers,\n                            external_urls: e.external_urls.spotify\n                        }))\n                        console.log(res.data);\n                        console.log(res.data.artists[0]);\n                        setRetrievedRelatedArtists(relatedArtists);\n                    })\n            })\n    }, [])\n\n    console.log(retrievedRelatedArtists[0]);\n\n    const logout = ((e) => {\n        e.preventDefault();\n\n        axios\n            .get(\"/auth/logout\")\n            .then(() => {\n                props.logout();\n                props.history.push(\"/\");\n            });\n    })\n\n\n    const turnOn0 = (e) => {\n        e.stopPropagation();\n        setOverlayDisplay(true);\n        setArtistNumber(0);\n    }\n\n    const turnOn1 = (e) => {\n        e.stopPropagation();\n        setOverlayDisplay(true);\n        setArtistNumber(1);\n    }\n\n    const turnOn2 = (e) => {\n        e.stopPropagation();\n        setOverlayDisplay(true);\n        setArtistNumber(2);\n    }\n\n    const turnOn3 = (e) => {\n        e.stopPropagation();\n        setOverlayDisplay(true);\n        setArtistNumber(3);\n    }\n\n    const turnOn4 = (e) => {\n        e.stopPropagation();\n        setOverlayDisplay(true);\n        setArtistNumber(4);\n    }\n\n    const turnOn5 = (e) => {\n        e.stopPropagation();\n        setOverlayDisplay(true);\n        setArtistNumber(5);\n    }\n\n    const turnOn6 = (e) => {\n        e.stopPropagation();\n        setOverlayDisplay(true);\n        setArtistNumber(6);\n    }\n\n    const turnOff = (e) => {\n        e.stopPropagation();\n        setOverlayDisplay(false);\n    }\n\n    return (\n        <div className=\"artists\">\n            <div id=\"header-container\">\n                    <header className=\"artists-header\">\n                        <div id=\"genre-container\">\n                            <h2 className=\"header-sub\">{genre.charAt(0).toUpperCase() + genre.slice(1)}</h2>\n                        </div>\n                        <div id=\"user-container\">\n                            <h2 className=\"header-sub\">Welcome, {props.username}</h2>\n                            <button className=\"logout artists-button\" onClick={logout}>Logout</button>\n                        </div>\n                    </header>\n            </div>\n            {retrievedArtists.length > 0 && (\n                <div id=\"primary-artist-container\" onClick={turnOn0}>\n                    <h1 className=\"artist-header\">Selected Artist</h1>\n                    <img id=\"primary-artist-image\" src={retrievedArtists[0].images[0].url} />\n                    <p className=\"primary-artist-text\">{retrievedArtists[0].name}</p>\n                    {overlayDisplay && artistNumber === 0 ? \n                        <div id=\"overlay\" onClick={turnOff}>\n                            <img className=\"overlay-primary-artist-image\" src={retrievedArtists[0].images[0].url} />\n                            <div className=\"extra-info\">\n                                <p className=\"extra-artist-text\">Artist: {retrievedArtists[0].name}</p>\n                                <p className=\"extra-artist-text\">Genres: {retrievedArtists[0].genres}</p>\n                                <p className=\"extra-artist-text\">Popularity: {retrievedArtists[0].popularity}</p>\n                                <p className=\"extra-artist-text\">Followers: {retrievedArtists[0].followers.total}</p>\n                                <a className=\"extra-artist-text\" href={retrievedArtists[0].external_urls}>Artist Page</a>\n                            </div>\n                        </div> \n                    : null}\n                </div>\n            )}\n            <h3 className=\"artist-subheader\">Other Artists You Might Like</h3>\n            {retrievedRelatedArtists.length > 0 && (\n                <div id=\"related-artist-container\" onClick={turnOn1}>\n                    <div className=\"indiv-artist\">\n                        <img className=\"artist-image\" src={retrievedRelatedArtists[0].images[0].url} />\n                            <p className=\"related-artist-text\">{retrievedRelatedArtists[0].name}</p>\n                            {overlayDisplay && artistNumber === 1 ?\n                                <div id=\"overlay\" onClick={turnOff}>\n                                <img className=\"related-artist-image\" src={retrievedRelatedArtists[0].images[0].url} />\n                                    <div className=\"extra-info\">\n                                        <p className=\"extra-artist-text\">Artist: {retrievedRelatedArtists[0].name}</p>\n                                        <p className=\"extra-artist-text\">Genres: {retrievedRelatedArtists[0].genres}</p>\n                                        <p className=\"extra-artist-text\">Popularity: {retrievedRelatedArtists[0].popularity}</p>\n                                        <p className=\"extra-artist-text\">Followers: {retrievedRelatedArtists[0].followers.total}</p>\n                                        <a className=\"extra-artist-text\" href={retrievedRelatedArtists[0].external_urls}>Artist Page</a>\n                                    </div>\n                                </div> \n                            : null}\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-link\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                                <path d=\"M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5\" />\n                                <path d=\"M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5\" />\n                            </svg>\n                    </div>\n                    <div className=\"indiv-artist\" onClick={turnOn2}>\n                        <img className=\"artist-image\" src={retrievedRelatedArtists[1].images[0].url} />\n                            <p className=\"related-artist-text\">{retrievedRelatedArtists[1].name}</p>\n                            {overlayDisplay && artistNumber === 2 ?\n                                <div id=\"overlay\" onClick={turnOff}>\n                                    <img className=\"related-artist-image\" src={retrievedRelatedArtists[1].images[0].url} />\n                                    <div className=\"extra-info\">\n                                        <p className=\"extra-artist-text\">Artist: {retrievedRelatedArtists[1].name}</p>\n                                        <p className=\"extra-artist-text\">Genres: {retrievedRelatedArtists[1].genres}</p>\n                                        <p className=\"extra-artist-text\">Popularity: {retrievedRelatedArtists[1].popularity}</p>\n                                        <p className=\"extra-artist-text\">Followers: {retrievedRelatedArtists[1].followers.total}</p>\n                                        <a className=\"extra-artist-text\" href={retrievedRelatedArtists[1].external_urls}>Artist Page</a>\n                                    </div>\n                                </div> \n                            : null}\n                            {/* <Link className=\"artist-text\">{retrievedRelatedArtists[1].external_urls}</Link> */}\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-link\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                                <path d=\"M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5\" />\n                                <path d=\"M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5\" />\n                        </svg>\n                    </div>\n                    <div className=\"indiv-artist\" onClick={turnOn3}>\n                        <img className=\"artist-image\" src={retrievedRelatedArtists[2].images[0].url} />\n                            <p className=\"related-artist-text\">{retrievedRelatedArtists[2].name}</p>\n                            {overlayDisplay && artistNumber === 3 ?\n                                <div id=\"overlay\" onClick={turnOff}>\n                                    <img className=\"related-artist-image\" src={retrievedRelatedArtists[2].images[0].url} />\n                                    <div className=\"extra-info\">\n                                        <p className=\"extra-artist-text\">Artist: {retrievedRelatedArtists[2].name}</p>\n                                        <p className=\"extra-artist-text\">Genres: {retrievedRelatedArtists[2].genres}</p>\n                                        <p className=\"extra-artist-text\">Popularity: {retrievedRelatedArtists[2].popularity}</p>\n                                        <p className=\"extra-artist-text\">Followers: {retrievedRelatedArtists[2].followers.total}</p>\n                                        <a className=\"extra-artist-text\" href={retrievedRelatedArtists[2].external_urls}>Artist Page</a>\n                                    </div>\n                                </div> \n                            : null}\n                            {/* <Link className=\"artist-text\">{retrievedRelatedArtists[2].external_urls}</Link> */}\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-link\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                                <path d=\"M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5\" />\n                                <path d=\"M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5\" />\n                        </svg>\n                    </div>\n                    <div className=\"indiv-artist\" onClick={turnOn4}>\n                    <img className=\"artist-image\" src={retrievedRelatedArtists[3].images[0].url} />\n                        <p className=\"related-artist-text\">{retrievedRelatedArtists[3].name}</p>\n                        {overlayDisplay && artistNumber === 4 ?\n                            <div id=\"overlay\" onClick={turnOff}>\n                                <img className=\"related-artist-image\" src={retrievedRelatedArtists[3].images[0].url} />\n                                <div className=\"extra-info\">\n                                    <p className=\"extra-artist-text\">Artist: {retrievedRelatedArtists[3].name}</p>\n                                    <p className=\"extra-artist-text\">Genres: {retrievedRelatedArtists[3].genres}</p>\n                                    <p className=\"extra-artist-text\">Popularity: {retrievedRelatedArtists[3].popularity}</p>\n                                    <p className=\"extra-artist-text\">Followers: {retrievedRelatedArtists[3].followers.total}</p>\n                                    <a className=\"extra-artist-text\" href={retrievedRelatedArtists[3].external_urls}>Artist Page</a>\n                                </div>\n                            </div> \n                        : null}\n                        {/* <Link className=\"artist-text\">{retrievedRelatedArtists[3].external_urls}</Link> */}\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-link\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                            <path d=\"M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5\" />\n                            <path d=\"M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5\" />\n                        </svg>\n                    </div>\n                    <div className=\"indiv-artist\" onClick={turnOn5}>\n                    <img className=\"artist-image\" src={retrievedRelatedArtists[4].images[0].url} />\n                        <p className=\"related-artist-text\">{retrievedRelatedArtists[4].name}</p>\n                        {overlayDisplay && artistNumber === 5 ?\n                            <div id=\"overlay\" onClick={turnOff}>\n                                <img className=\"related-artist-image\" src={retrievedRelatedArtists[4].images[0].url} />\n                                <div className=\"extra-info\">\n                                    <p className=\"extra-artist-text\">Artist: {retrievedRelatedArtists[4].name}</p>\n                                    <p className=\"extra-artist-text\">Genres: {retrievedRelatedArtists[4].genres}</p>\n                                    <p className=\"extra-artist-text\">Popularity: {retrievedRelatedArtists[4].popularity}</p>\n                                    <p className=\"extra-artist-text\">Followers: {retrievedRelatedArtists[4].followers.total}</p>\n                                    <a className=\"extra-artist-text\" href={retrievedRelatedArtists[4].external_urls}>Artist Page</a>\n                                </div>\n                            </div> \n                        : null}\n                        {/* <Link className=\"artist-text\">{retrievedRelatedArtists[4].external_urls}</Link> */}\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-link\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                            <path d=\"M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5\" />\n                            <path d=\"M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5\" />\n                        </svg>\n                    </div>\n                    <div className=\"indiv-artist\" onClick={turnOn6}>\n                    <img className=\"artist-image\" src={retrievedRelatedArtists[5].images[0].url} />\n                        <p className=\"related-artist-text\">{retrievedRelatedArtists[5].name}</p>\n                        {overlayDisplay && artistNumber === 6 ?\n                            <div id=\"overlay\" onClick={turnOff}>\n                                <img className=\"related-artist-image\" src={retrievedRelatedArtists[5].images[0].url} />\n                                <div className=\"extra-info\">\n                                    <p className=\"extra-artist-text\">Artist: {retrievedRelatedArtists[5].name}</p>\n                                    <p className=\"extra-artist-text\">Genres: {retrievedRelatedArtists[5].genres}</p>\n                                    <p className=\"extra-artist-text\">Popularity: {retrievedRelatedArtists[5].popularity}</p>\n                                    <p className=\"extra-artist-text\">Followers: {retrievedRelatedArtists[5].followers.total}</p>\n                                    <a className=\"extra-artist-text\" href={retrievedRelatedArtists[5].external_urls}>Artist Page</a>\n                                </div>\n                            </div> \n                        : null}\n                        {/* <Link className=\"artist-text\">{retrievedRelatedArtists[4].external_urls}</Link> */}\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-link\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                            <path d=\"M10 14a3.5 3.5 0 0 0 5 0l4 -4a3.5 3.5 0 0 0 -5 -5l-.5 .5\" />\n                            <path d=\"M14 10a3.5 3.5 0 0 0 -5 0l-4 4a3.5 3.5 0 0 0 5 5l.5 -.5\" />\n                        </svg>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nfunction mapStateToProps(reduxState) {\n    return {...reduxState.user, ...reduxState.genre, ...reduxState.token};\n}\n\nexport default connect(mapStateToProps, {logout})(Artists)\n","/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/ProtectedRouteLogin.js",[],"/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/ProtectedRouteGenre.js",[],"/Users/jeddyhwang/Documents/DevMountain/personal-project/explorify/src/dux/tokenReducer.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":12},{"ruleId":"127","severity":1,"message":"131","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":14},{"ruleId":"127","severity":1,"message":"132","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":12},{"ruleId":"127","severity":1,"message":"133","line":1,"column":16,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"134","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":35},{"ruleId":"127","severity":1,"message":"135","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":13},{"ruleId":"136","severity":1,"message":"137","line":32,"column":17,"nodeType":"138","endLine":32,"endColumn":39},{"ruleId":"127","severity":1,"message":"133","line":1,"column":16,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"134","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":35},{"ruleId":"127","severity":1,"message":"135","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":13},{"ruleId":"127","severity":1,"message":"139","line":4,"column":9,"nodeType":"129","messageId":"130","endLine":4,"endColumn":19},{"ruleId":"127","severity":1,"message":"132","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":12},{"ruleId":"127","severity":1,"message":"133","line":1,"column":16,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"134","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":35},{"ruleId":"127","severity":1,"message":"135","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":13},{"ruleId":"127","severity":1,"message":"133","line":1,"column":16,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"135","line":12,"column":8,"nodeType":"129","messageId":"130","endLine":12,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":44,"column":8,"nodeType":"142","endLine":44,"endColumn":10,"suggestions":"143"},{"ruleId":"127","severity":1,"message":"144","line":3,"column":9,"nodeType":"129","messageId":"130","endLine":3,"endColumn":13},{"ruleId":"140","severity":1,"message":"145","line":59,"column":8,"nodeType":"142","endLine":59,"endColumn":10,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":138,"column":21,"nodeType":"138","endLine":138,"endColumn":94},{"ruleId":"147","severity":1,"message":"148","line":142,"column":29,"nodeType":"138","endLine":142,"endColumn":117},{"ruleId":"147","severity":1,"message":"148","line":158,"column":25,"nodeType":"138","endLine":158,"endColumn":104},{"ruleId":"147","severity":1,"message":"148","line":162,"column":33,"nodeType":"138","endLine":162,"endColumn":120},{"ruleId":"147","severity":1,"message":"148","line":179,"column":25,"nodeType":"138","endLine":179,"endColumn":104},{"ruleId":"147","severity":1,"message":"148","line":183,"column":37,"nodeType":"138","endLine":183,"endColumn":124},{"ruleId":"147","severity":1,"message":"148","line":201,"column":25,"nodeType":"138","endLine":201,"endColumn":104},{"ruleId":"147","severity":1,"message":"148","line":205,"column":37,"nodeType":"138","endLine":205,"endColumn":124},{"ruleId":"147","severity":1,"message":"148","line":223,"column":21,"nodeType":"138","endLine":223,"endColumn":100},{"ruleId":"147","severity":1,"message":"148","line":227,"column":33,"nodeType":"138","endLine":227,"endColumn":120},{"ruleId":"147","severity":1,"message":"148","line":245,"column":21,"nodeType":"138","endLine":245,"endColumn":100},{"ruleId":"147","severity":1,"message":"148","line":249,"column":33,"nodeType":"138","endLine":249,"endColumn":120},{"ruleId":"147","severity":1,"message":"148","line":267,"column":21,"nodeType":"138","endLine":267,"endColumn":100},{"ruleId":"147","severity":1,"message":"148","line":271,"column":33,"nodeType":"138","endLine":271,"endColumn":120},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'routes' is defined but never used.","'Home' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'withRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["151"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'props.accessToken' and 'props.genre'. Either include them or remove the dependency array.",["152"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [props]",{"range":"157","text":"158"},"Update the dependencies array to be: [props.accessToken, props.genre]",{"range":"159","text":"160"},[1337,1339],"[props]",[2235,2237],"[props.accessToken, props.genre]"]